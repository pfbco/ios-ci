# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

require "yaml"
require "ostruct"

config = OpenStruct.new YAML.load(File.read("config.yml"))

project = config.project["entry"]
target = ""
configuration = ""

targets = config.project["targets"]
configurations = config.project["configurations"]

default_platform(:ios)

#
# Common code executed before any custom lane
before_all do |lane, options|

  # Trying to load Xcode version
  if ENV["XCODE_VERSION"]
    xcversion(version: ENV["XCODE_VERSION"])
  elsif File.exist?("../xcode.version")
    xcversion(version: File.read("../xcode.version").strip)
  end

  # Checking target as parameter
  target = targets[0]
  if options[:target] and targets.include? options[:target]
    target = options[:target]
  end

  # Set the first item from config as the default configuration
  configuration = configurations[0]
end

desc "Download and install a specific Xcode version"
lane :xcode do |options|
  begin
    ensure_xcode_version version: options[:version]
    UI.success "Xcode " + options[:version] + " is already installed"
  rescue => ex
    UI.error ex
    xcode_install version: options[:version]
    reset
  end
end

desc "Reset environment"
lane :reset do
  clear_derived_data
  reset_simulator_contents
  xcclean
  clean_build_artifacts
end

desc "Get current version of the project"
lane :get_version do
  current_version = get_version_number(
    xcodeproj: project,
    target: target,
    configuration: configuration,
  )
  UI.message "Current version: " + current_version
end

desc "Install project dependencies"
lane :dependencies do
  unless !File.exist?("../Cartfile")
    carthage(
      platform: "ios",
      cache_builds: true,
      use_xcframeworks: true,
    )
  end
  unless !File.exist?("../Podfile")
    cocoapods(
      podfile: "PodFile",
      verbose: true,
    )
  end
end

desc "Runs all the tests"
lane :tests do
  #
  scan(
    project: project,
    scheme: target,
    configuration: configuration,
    output_directory: "./fastlane/test_results",
  )
end
